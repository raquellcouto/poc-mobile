# =============================
# Set BrowserStack Credentials
# =============================
# Add your BrowserStack userName and accessKey here or set BROWSERSTACK_USERNAME and
# BROWSERSTACK_ACCESS_KEY as env variables
userName: BROWSERSTACK_USERNAME
accessKey: BROWSERSTACK_ACCESS_KEY


# ======================
# BrowserStack Reporting
# ======================
# The following capabilities are used to set up reporting on BrowserStack:
# Set 'projectName' to the name of your project. Example, Marketing Website
projectName: appium-test
# Set `buildName` as the name of the job / testsuite being run
buildName: browserstack build
percy: true
percyCaptureMode: manual
# `buildIdentifier` is a unique id to differentiate every execution that gets appended to
# buildName. Choose your buildIdentifier format from the available expressions:
# ${BUILD_NUMBER} (Default): Generates an incremental counter with every execution
# ${DATE_TIME}: Generates a Timestamp with every execution. E.g. 05-Nov-19:30
# Read more about buildIdentifiers here -> https://www.browserstack.com/docs/automate/selenium/organize-tests
buildIdentifier: '#${BUILD_NUMBER}' # Supports strings along with either/both ${expression}
# Set `framework` of your test suite. Example, `testng`, `cucumber`, `cucumber-testng`
# This property is needed to send test context to BrowserStack (test name, status)
#framework: junit5
framework: "cucumber-junit5"
#android
app: bs://ddf7afb67ebff5cb5bcb06fd286943e47f957bf9
#com modificação
#app: bs://bf847af915ca484864280907472a26c79e0ed272
# ios
#app: bs://07a767eebbfc40523486271281305ecfa2f88193
#Demo Bank Oauth
#["bs://99bb7ce4f234d14e722e4911b11db002d4c5904c"]
#otherApps:
#  - bs://99bb7ce4f234d14e722e4911b11db002d4c5904c
# =======================================
# Platforms (Browsers / Devices to test)
# =======================================
# Platforms object contains all the browser / device combinations you want to test on.
# Entire list available here -> (https://www.browserstack.com/list-of-browsers-and-platforms/automate)
platforms:
  - platformName: android
    platformVersion: 12.0
    deviceName: Samsung Galaxy S22 Ultra
#  - platformName: android
#    platformVersion: 13.0
#    deviceName: Google Pixel 7 Pro
#platforms:
#  - platformName: ios
#    platformVersion: 17
#    deviceName: iPhone 15 Pro Max
#  - platformName: ios
#    platformVersion: 17
#    deviceName: iPhone 15 Plus
#  - platformName: ios
#    platformVersion: 17
#    deviceName: iPhone 15

# =======================
# Parallels per Platform
# =======================
# The number of parallel threads to be used for each platform set.
# BrowserStack's SDK runner will select the best strategy based on the configured value
#
# Example 1 - If you have configured 3 platforms and set `parallelsPerPlatform` as 2, a total of 6 (2 * 3) parallel threads will be used on BrowserStack
#
# Example 2 - If you have configured 1 platform and set `parallelsPerPlatform` as 5, a total of 5 (1 * 5) parallel threads will be used on BrowserStack
parallelsPerPlatform: 1

source: junit5

# ==========================================
# BrowserStack Local
# (For localhost, staging/private websites)
# ==========================================
# Set browserStackLocal to true if your website under test is not accessible publicly over the internet
# Learn more about how BrowserStack Local works here -> https://www.browserstack.com/docs/automate/selenium/local-testing-introduction
browserstackLocal: true # <boolean> (Default false)

  # Options to be passed to BrowserStack local in-case of advanced configurations
  # browserStackLocalOptions:
  # localIdentifier: # <string> (Default: null) Needed if you need to run multiple instances of local.
  # forceLocal: true  # <boolean> (Default: false) Set to true if you need to resolve all your traffic via BrowserStack Local tunnel.
  # skipBinaryInitialisation: true # <boolean> (Default: false) Set to true if you need to skip the Local Binary initialisation through SDK.
  # Entire list of arguments available here -> https://www.browserstack.com/docs/automate/selenium/manage-incoming-connections

# ===================
# Debugging features
# ===================
debug: true # <boolean> # Set to true if you need screenshots for every selenium command ran
networkLogs: true # <boolean> Set to true to enable HAR logs capturing
consoleLogs: errors # <string> Remote browser's console debug levels to be printed (Default: errors)
# Available options are `disable`, `errors`, `warnings`, `info`, `verbose` (Default: errors)